version: '3.7'

services:
    app:
        container_name: Nidhoggbot
        build:
            context: .
            target: development
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - '0.0.0.0:${HOST_PORT}:${HOST_PORT}'
            - 9229:9229
        command: sh -c "npm run start:dev"
        env_file:
            - .env
        depends_on:
            - redis
            - postgres
    redis:
        container_name: nidhoggbot-redis
        image: redis:6
        ports:
            - '0.0.0.0:6379:6379'
        volumes:
            - redis-data:/data
    postgres:
        container_name: nidhoggbot-postgres
        image: postgres:13.1-alpine
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USERNAME}
            POSTGRES_DB: ${POSTGRES_DATABASE}
            PG_DATA: /var/lib/postgresql/data
        ports:
            - '0.0.0.0:15432:5432'
        volumes:
            - pgdata:/var/lib/postgresql/data
    pgadmin:
        container_name: nidhoggbot-pg_admin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - '0.0.0.0:16543:80'
        depends_on:
            - postgres
networks:
    back:
volumes:
    app:
    pgdata:
    redis-data:
    pgadmin-data:
    redis_insight-data:
    mongodata:
